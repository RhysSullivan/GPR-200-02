// Code extended by Rhys Sullivan
vec4 guassianBlur(vec2 fragCoord)
{
  	vec2 fLCoord = vec2(fragCoord.x, floor(fragCoord.y) );
    vec2 invRes = 1. / iChannelResolution[0].xy;
   	vec4 a = 	  texture(iChannel0, convertToUV(vec2(fLCoord.x, fLCoord.y - 2.), invRes) );    
    vec4 b = 3. * texture(iChannel0, convertToUV(vec2(fLCoord.x, fLCoord.y - 1.), invRes) );     
    vec4 c = 3. * texture(iChannel0, convertToUV(vec2(fLCoord.x, fLCoord.y + 1.), invRes) ); 
    vec4 d = 	  texture(iChannel0, convertToUV(vec2(fLCoord.x, fLCoord.y + 2.), invRes) );     
    return 0.125 * (a + b + c + d);
}

void mainImage( out vec4 fragColor, in vec2 fragCoord )
{      
   	fragColor = guassianBlur(fragCoord);	   
    vec2 rInv = 1. / iChannelResolution[2].xy;
    if(fragCoord.x < 1. && fragCoord.y < 1.)
    {
        if(iMouse.z > 0.)
       	fragColor = vec4( (iMouse.xy * rInv), 0., 1.);              
        else
        fragColor = texture(iChannel2, fragCoord * rInv);  
    }
}


 
