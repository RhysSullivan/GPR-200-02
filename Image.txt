// GLSL STARTER CODE BY DANIEL S. BUCKSTEIN
//  -> IMAGE TAB (final)

//------------------------------------------------------------
// SHADERTOY MAIN

// mainImage: process the current pixel (exactly one call per pixel)
//    fragColor: output final color for current pixel
//    fragCoord: input location of current pixel in image (in pixels)
// Code extended by Rhys Sullivan

void mainImage(out color4 fragColor, in sCoord fragCoord)
{
    // setup
    // test UV for input image
    sCoord uv = fragCoord / iChannelResolution[0].xy;
    
    // TESTING
    // set iChannel0 to 'Misc/Buffer A' and fetch sample
    vec4 regCM = texture(iChannel0, uv);
    vec4 lumenCM = texture(iChannel1, uv);
    vec4 blurCM = texture(iChannel2, uv);
    vec4 a = regCM;
    vec4 b = blurCM;
    fragColor = a;    
    fragColor = lumenCM;
    return;
    fragColor = b;
    
    fragColor = a + b; // add    
    
    fragColor = 1. - (1. - a) * (1. - b); // referenced: https://en.wikipedia.org/wiki/Blend_modes#Overlay
    
    fragColor = max(a, b); // lighten only
    
    
    // soft light
    if(b.r + b.g + b.b < .5)
    {
     	fragColor = 2. * a * b + a * a * (1. - 2. * b);
    }
    else
    {
        fragColor = 2. * a * (1. - b) + sqrt(a) * (2. * b - 1.);
    }    
    
	fragColor = mix(a, b, .6); // mix
	return;    
}